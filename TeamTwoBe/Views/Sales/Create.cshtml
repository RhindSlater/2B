@model TeamTwoBe.Views.ViewModels.SaleConditionGradeVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Hey @Session["Username"], Create a new sale</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Sale</h4>
        <hr/>
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MyCard.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MyCard.name, new { htmlAttributes = new { @class = "form-control", @List = "test" } })
                @Html.ValidationMessageFor(model => model.MyCard.name, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <input list="CardList" type="text" oninput="getCard(this.value)"/>
        <datalist id="CardList">

        </datalist>

        <script>

                var url = 'https://db.ygoprodeck.com/api/v4/cardinfo.php?fname=';

                function getCard(card) {
                    var xhttp = new XMLHttpRequest();
                    xhttp.open('GET', url + card, true);

                    xhttp.onload = function () {
                        if (xhttp.status >= 200 && xhttp.status < 400) {
                            var rsp = JArray.parse(xhttp.responseText.toString());

                            var <@Model.MyCard> li = JArray.Parse(rsp).ToObject<List<@Model.MyCard>>();

                            rsp.forEach(function (param) {
                                addListEntry(param);
                            });
                        }
                    };
                    xhttp.send();
                }

            function addListEntry(value1) {
                var optionNode = document.createElement("option");

                optionNode.value = value1;

                document.getElementById("CardList").appendChild(optionNode);
            }


        </script>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MySale.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MySale.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MySale.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MySale.CardCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Conditions", "Choose Condition")
                    @Html.ValidationMessageFor(model => model.MyCondition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MySale.CardGrade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Grades", "Choose Grade")
                    @Html.ValidationMessageFor(model => model.MyGrade, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.MySale.ForAuction, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MySale.ForAuction)
                        @Html.ValidationMessageFor(model => model.MySale.ForAuction, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

            <div>
                @Html.ActionLink("Back to List", "Index",new { id = Session["UserID"] })
            </div>

            <script src="~/Scripts/jquery-1.10.2.min.js"></script>
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
